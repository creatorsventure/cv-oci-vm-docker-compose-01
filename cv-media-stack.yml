#version: '3.8'
# CV Media containers 
name: cv-media-stack

# Common snipets
x-common-logging: &common-logging
  logging:
    driver: "json-file"
    options:
      max-size: "10m"
      max-file: "3"
      tag: "{{.Name}}"

services:

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    restart: unless-stopped
    <<: [ *common-logging ]
    environment:
      - PUID=${HOST_UID} # your user id (host)
      - PGID=${HOST_GID} # your group id (host)
      - TZ=${TZ} # set your timezone
      - WEBUI_PORT=8080 # internal webui port
      # - UMASK_SET=022        # optional
      # - QBITTORRENT_WEBUI_PORT=8080  # alternate var name older images
    volumes:
      - ${DOCKER_DATA_ROOT}/qbit-data/data:/config
      - ${QBITTORRENT_LIBRARY_ROOT}/qbit-data/downloads:/downloads
      - ${QBITTORRENT_LIBRARY_ROOT}/qbit-data/incomplete:/incomplete
      - ${QBITTORRENT_LIBRARY_ROOT}/qbit-data/watch:/watch
    # If you use docker's host network + direct port exposure:
    # network_mode: "host"
    ports:
      - "6881:6881" # bittorrent TCP
      - "6881:6881/udp" # bittorrent UDP (DHT/uTP)
    networks:
      - cv-base-stack-network
      - cv-media-stack-network
    # Traefik v2 labels (if you use Traefik as reverse proxy)
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.qbittorrent.rule=Host(`${QBITTORRENT_HOST}`)"
      - "traefik.http.routers.qbittorrent.entrypoints=websecure"
      - "traefik.http.routers.qbittorrent.tls=true"
      - "traefik.http.routers.qbittorrent.tls.certresolver=le"
      - "traefik.http.services.qbittorrent.loadbalancer.server.port=8080"
      - "traefik.http.routers.qbittorrent.middlewares=rate-limit@file"
      # Basic auth (optional) -> create user:pass with `htpasswd -nb user pass` then use the base64
      # - "traefik.http.routers.qbittorrent.middlewares=auth"
      # - "traefik.http.middlewares.auth.basicauth.users=USER:HASHEDPASSWORD"

  filebrowser:
    image: filebrowser/filebrowser:latest
    container_name: filebrowser
    restart: unless-stopped
    <<: [ *common-logging ]
    user: "${HOST_UID}:${HOST_GID}" # adjust to your download folder owner
    environment:
      - PUID=${HOST_UID}
      - PGID=${HOST_GID}
      - TZ=${TZ}
    volumes:
      - ${DOCKER_DATA_ROOT}/filebrowser-data/data:/config
      - ${DOCKER_DATA_ROOT}/filebrowser-data/database:/database
      - ${FILE_BROWSER_LOCATION_01}:/srv
      - ${FILE_BROWSER_LOCATION_02}:/srv/home # your mounted media drive path
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.filebrowser.rule=Host(`${FILE_BROWSER_HOST}`)"
      - "traefik.http.routers.filebrowser.entrypoints=websecure"
      - "traefik.http.routers.filebrowser.tls=true"
      - "traefik.http.routers.filebrowser.tls.certresolver=le"
      - "traefik.http.services.filebrowser.loadbalancer.server.port=80"
      - "traefik.http.routers.filebrowser.middlewares=rate-limit@file"
    networks:
      - cv-base-stack-network
      - cv-media-stack-network

  plex:
    image: plexinc/pms-docker:latest
    container_name: plex
    network_mode: host # Required for DLNA, Chromecast, discovery, etc.
    restart: unless-stopped
    <<: [ *common-logging ]
    depends_on:
      - qbittorrent
      - filebrowser
    environment:
      - TZ=${TZ}
      - PLEX_CLAIM=claim-fZeoxKyRqhHG3H6tqzzs # Get from https://plex.tv/claim (valid 4 mins)
      - ADVERTISE_IP=http://10.9.9.1:32400/,http://10.20.20.148:32400/,https://plex.oci.creatorsventure.com:32400/
      - HOSTNAME=plex-server
      - PLEX_UID=${HOST_UID}
      - PLEX_GID=${HOST_GID}
    volumes:
      - ${DOCKER_DATA_ROOT}/plex-data/data:/config
      - ${DOCKER_DATA_ROOT}/plex-data/transcode:/transcode
      - ${QBITTORRENT_LIBRARY_ROOT}/qbit-data/downloads:/data
      #devices: # for gpu passthrew
      #- /dev/dri:/dev/dri
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.plex.rule=Host(`${PLEX_HOST}`)"
      - "traefik.http.routers.plex.entrypoints=websecure"
      - "traefik.http.routers.plex.tls=true"
      - "traefik.http.routers.plex.tls.certresolver=le"
      # proxy to the host's plex port
      - "traefik.http.services.plex.loadbalancer.server.url=http://host.docker.internal:32400"
      - "traefik.http.middlewares.plex-headers.headers.customrequestheaders.X-Forwarded-Proto=https"
      # optional: add middlewares (basic auth, secure headers) if you want
      - "traefik.http.routers.plex.middlewares=rate-limit@file"

networks:
  cv-base-stack-network:
    external: true # Means the dont create new refer existing
  cv-media-stack-network:
    name: cv-media-stack-network
    driver: bridge
